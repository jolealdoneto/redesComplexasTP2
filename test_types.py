import pprint
triangles = {}

def rotate(t, n):
    return t[n:] + t[:n]
def get_canonical(t):
    tmin = min(t)
    twice_min = len(filter(lambda x: x == tmin, t)) > 1

    while tmin != t[0]:
        t = rotate(t, 1)
    if twice_min:
        while tmin != t[0] or tmin != t[1]:
            t = rotate(t, 1)
    return t

types = [((1, 1), (0, 1), (1, -1)),
    ((1, -1), (1, -1), (1, 1)),
    ((0, -1), (1, 1), (1, 1)),
    ((0, 1), (1, -1), (1, -1)),
    ((1, 1), (0, 1), (0, 1)),
    ((1, 1), (0, -1), (0, -1)),
    ((1, -1), (0, -1), (1, 1)),
    ((0, -1), (1, 1), (0, -1)),
    ((0, -1), (1, 1), (0, 1)),
    ((1, 1), (1, -1), (0, -1)),
    ((0, 1), (0, -1), (0, 1)),
    ((0, 1), (0, 1), (0, -1)),
    ((1, 1), (1, 1), (1, 1)),
    ((0, 1), (1, -1), (1, 1)),
    ((1, -1), (0, -1), (1, -1)),
    ((1, -1), (1, 1), (1, 1)),
    ((0, 1), (0, 1), (1, -1)),
    ((1, 1), (0, -1), (1, -1)),
    ((0, 1), (1, -1), (0, 1)),
    ((0, 1), (1, -1), (0, -1)),
    ((1, -1), (1, -1), (0, 1)),
    ((0, -1), (0, -1), (0, -1)),
    ((1, -1), (0, 1), (0, 1)),
    ((0, -1), (1, -1), (1, -1)),
    ((0, -1), (0, -1), (0, 1)),
    ((0, -1), (1, -1), (0, -1)),
    ((0, -1), (0, -1), (1, 1)),
    ((0, 1), (0, 1), (1, 1)),
    ((1, 1), (0, -1), (1, 1)),
    ((0, -1), (0, 1), (0, -1)),
    ((1, -1), (0, 1), (1, 1)),
    ((0, 1), (0, -1), (1, 1)),
    ((1, 1), (1, -1), (0, 1)),
    ((1, -1), (1, 1), (0, -1)),
    ((1, 1), (0, 1), (0, -1)),
    ((1, 1), (1, -1), (1, -1)),
    ((0, -1), (0, -1), (1, -1)),
    ((0, 1), (0, -1), (0, -1)),
    ((1, -1), (0, -1), (0, 1)),
    ((1, 1), (1, -1), (1, 1)),
    ((0, -1), (1, -1), (0, 1)),
    ((1, 1), (0, -1), (0, 1)),
    ((0, 1), (0, -1), (1, -1)),
    ((0, -1), (1, -1), (1, 1)),
    ((1, -1), (1, -1), (0, -1)),
    ((1, 1), (1, 1), (0, -1)),
    ((0, -1), (0, 1), (1, -1)),
    ((1, -1), (0, 1), (0, -1)),
    ((0, 1), (1, 1), (1, 1)),
    ((1, -1), (0, 1), (1, -1)),
    ((1, -1), (0, -1), (0, -1)),
    ((1, 1), (0, 1), (1, 1)),
    ((0, -1), (1, 1), (1, -1)),
    ((1, -1), (1, -1), (1, -1)),
    ((0, 1), (1, 1), (0, 1)),
    ((0, 1), (1, 1), (0, -1)),
    ((0, -1), (0, 1), (0, 1)),
    ((1, -1), (1, 1), (0, 1)),
    ((0, 1), (0, 1), (0, 1)),
    ((1, -1), (1, 1), (1, -1)),
    ((1, 1), (1, 1), (0, 1)),
    ((0, 1), (1, 1), (1, -1)),
    ((0, -1), (0, 1), (1, 1)),
    ((1, 1), (1, 1), (1, -1))]

all = {((1, -1), (1, -1), (1, 1)): True, ((0, -1), (1, 1), (1, 1)): True, ((0, 1), (1, -1), (1, 1)): True, ((0, -1), (0, -1), (0, -1)): True, ((0, -1), (0, 1), (1, -1)): True, ((1, 1), (1, 1), (1, 1)): True, ((1, -1), (1, 1), (1, 1)): True, ((0, 1), (0, 1), (1, -1)): True, ((0, 1), (1, -1), (1, -1)): True, ((0, -1), (1, -1), (1, -1)): True, ((0, -1), (0, -1), (0, 1)): True, ((0, 1), (0, 1), (1, 1)): True, ((0, -1), (0, -1), (1, -1)): True, ((0, -1), (1, 1), (0, 1)): True, ((0, -1), (1, -1), (0, 1)): True, ((0, -1), (1, -1), (1, 1)): True, ((0, -1), (0, -1), (1, 1)): True, ((0, 1), (1, 1), (1, 1)): True, ((1, -1), (1, -1), (1, -1)): True, ((0, -1), (1, 1), (1, -1)): True, ((0, -1), (0, 1), (0, 1)): True, ((0, 1), (0, 1), (0, 1)): True, ((0, 1), (1, 1), (1, -1)): True, ((0, -1), (0, 1), (1, 1)): True}

print len(all)

#for t in types:
#    triangles[get_canonical(t)] = True
#
#print triangles
